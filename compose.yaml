#name: notes-app
version: '3.8'

services:

    redis:
        image: "redis:7.0"
        container_name: redis
        networks:
            - frontnet
        ports:
            - "6379:6379"
        command: redis-server --loglevel verbose --replica-read-only no
        restart: unless-stopped
        volumes:
            - type: bind
              source: /data/notes-session-data
              target: /var/lib/redis
        deploy:
            mode: replicated
            replicas: 1
            placement:
                constraints:
                    - "node.labels.type!=public"

    db-user-auth:
        image: "mysql:9.0"
        container_name: db-user-auth
        command: [  "mysqld",
                    "--character-set-server=utf8mb4",
                    "--collation-server=utf8mb4_unicode_ci",
                    "--bind-address=0.0.0.0" ]
        expose:
            - "3306"
        networks:
            - authnet
        volumes:
            # - mysql-db-data:/var/lib/mysql
            - type: bind
              source: /data/mysql-db-data
              target: /var/lib/mysql
        restart: unless-stopped
        environment:
            MYSQL_ROOT_PASSWORD: "mysql_1234_Mrum"
            MYSQL_USER: user
            MYSQL_PASSWORD: user
            MYSQL_DATABASE: users
            DATABASE_HOST: db-user-auth
        deploy:
            mode: replicated
            replicas: 1
            placement:
                constraints:
                    - "node.labels.type==db"

    svc-user-auth:
        # build: https://github.com/dsoma/user-auth-server.git
        build: ../user-auth-server/
        image: 813234997819.dkr.ecr.us-west-2.amazonaws.com/svc-user-auth:latest
        container_name: svc-user-auth
        depends_on:
            - db-user-auth
        networks:
            - authnet
            - svcnet
        ports:
            - "3301:3301"
        restart: unless-stopped
        deploy:
            mode: replicated
            replicas: 1
            placement:
                constraints:
                    - "node.labels.type==svc"

    db-notes:
        image: "mysql:9.0"
        container_name: "db-notes"
        command: [  "mysqld",
                    "--character-set-server=utf8mb4",
                    "--collation-server=utf8mb4_unicode_ci",
                    "--bind-address=0.0.0.0" ]
        expose:
            - "3306"
        networks:
            - frontnet
        volumes:
            # - mysql-db-data-notes:/var/lib/mysql
            - type: bind
              source: /data/mysql-db-data-notes
              target: /var/lib/mysql
        restart: unless-stopped
        environment:
            MYSQL_ROOT_PASSWORD: "mysql_1234_Mrum"
            MYSQL_USER: notes
            MYSQL_PASSWORD: notes
            MYSQL_DATABASE: notes
            DATABASE_HOST: db-notes
        deploy:
            mode: replicated
            replicas: 1
            placement:
                constraints:
                    - "node.labels.type==db"

    svc-notes:
        build: ./
        container_name: svc-notes
        image: 813234997819.dkr.ecr.us-west-2.amazonaws.com/svc-notes:latest
        depends_on:
            - db-notes
            - redis
            - svc-user-auth
        networks:
            - frontnet
            - svcnet
        # ports:
        #     - "3000:3000"
        restart: unless-stopped
        secrets:
            - TWITTER_CONSUMER_KEY
            - TWITTER_CONSUMER_SECRET
        environment:
            PORT: 3000
            REDIS_HOST: "redis"
            REDIS_PORT: 6379
            TWITTER_CALLBACK_HOST: "http://notes.deesoma.com"
            TWITTER_CONSUMER_KEY_FILE: /var/run/secrets/TWITTER_CONSUMER_KEY
            TWITTER_CONSUMER_SECRET_FILE: /var/run/secrets/TWITTER_CONSUMER_SECRET
        deploy:
            mode: replicated
            replicas: 1
            placement:
                constraints:
                    - "node.labels.type==public"

    cronginx:
        image: robogeek/cronginx:latest
        container_name: cronginx
        deploy:
            replicas: 1
            placement:
                constraints:
                    - "node.labels.type==public"
        networks:
            - frontnet
        ports:
            - 80:80
            - 443:443
        dns:
            - 8.8.8.8
            - 9.9.9.9
        restart: always
        volumes:
            - type: bind
              source: /home/ubuntu/etc-letsencrypt
              target: /etc/letsencrypt
            - type: bind
              source: /home/ubuntu/webroots
              target: /webroots
            - type: bind
              source: /home/ubuntu/nginx-conf-d
              target: /etc/nginx/conf.d


networks:
    frontnet:
        #driver: bridge
        driver: overlay
    authnet:
        #driver: bridge
        driver: overlay
    svcnet:
        #driver: bridge
        driver: overlay

secrets:
    TWITTER_CONSUMER_KEY:
        external: true
    TWITTER_CONSUMER_SECRET:
        external: true

# volumes:
#     mysql-db-data:
#     mysql-db-data-notes:
#     notes-session-data:
